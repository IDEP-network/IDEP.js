// source: idep/random/genesis.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var idep_random_random_pb = require('../../idep/random/random_pb.js');
goog.object.extend(proto, idep_random_random_pb);
var gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
goog.exportSymbol('proto.idep.random.GenesisState', null, global);
goog.exportSymbol('proto.idep.random.Requests', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.idep.random.GenesisState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.idep.random.GenesisState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.idep.random.GenesisState.displayName = 'proto.idep.random.GenesisState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.idep.random.Requests = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.idep.random.Requests.repeatedFields_,
    null
  );
};
goog.inherits(proto.idep.random.Requests, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.idep.random.Requests.displayName = 'proto.idep.random.Requests';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.idep.random.GenesisState.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.idep.random.GenesisState.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.idep.random.GenesisState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.idep.random.GenesisState.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        pendingRandomRequestsMap: (f = msg.getPendingRandomRequestsMap())
          ? f.toObject(includeInstance, proto.idep.random.Requests.toObject)
          : [],
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.idep.random.GenesisState}
 */
proto.idep.random.GenesisState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.idep.random.GenesisState();
  return proto.idep.random.GenesisState.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.idep.random.GenesisState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.idep.random.GenesisState}
 */
proto.idep.random.GenesisState.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = msg.getPendingRandomRequestsMap();
        reader.readMessage(value, function(message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readMessage,
            proto.idep.random.Requests.deserializeBinaryFromReader,
            '',
            new proto.idep.random.Requests()
          );
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.idep.random.GenesisState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.idep.random.GenesisState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.idep.random.GenesisState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.idep.random.GenesisState.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getPendingRandomRequestsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      1,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeMessage,
      proto.idep.random.Requests.serializeBinaryToWriter
    );
  }
};

/**
 * map<string, Requests> pending_random_requests = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.idep.random.Requests>}
 */
proto.idep.random.GenesisState.prototype.getPendingRandomRequestsMap = function(
  opt_noLazyCreate
) {
  return /** @type {!jspb.Map<string,!proto.idep.random.Requests>} */ (jspb.Message.getMapField(
    this,
    1,
    opt_noLazyCreate,
    proto.idep.random.Requests
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.idep.random.GenesisState} returns this
 */
proto.idep.random.GenesisState.prototype.clearPendingRandomRequestsMap = function() {
  this.getPendingRandomRequestsMap().clear();
  return this;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.idep.random.Requests.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.idep.random.Requests.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.idep.random.Requests.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.idep.random.Requests} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.idep.random.Requests.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        requestsList: jspb.Message.toObjectList(
          msg.getRequestsList(),
          idep_random_random_pb.Request.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.idep.random.Requests}
 */
proto.idep.random.Requests.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.idep.random.Requests();
  return proto.idep.random.Requests.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.idep.random.Requests} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.idep.random.Requests}
 */
proto.idep.random.Requests.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new idep_random_random_pb.Request();
        reader.readMessage(
          value,
          idep_random_random_pb.Request.deserializeBinaryFromReader
        );
        msg.addRequests(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.idep.random.Requests.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.idep.random.Requests.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.idep.random.Requests} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.idep.random.Requests.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      idep_random_random_pb.Request.serializeBinaryToWriter
    );
  }
};

/**
 * repeated Request requests = 1;
 * @return {!Array<!proto.idep.random.Request>}
 */
proto.idep.random.Requests.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.idep.random.Request>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    idep_random_random_pb.Request,
    1
  ));
};

/**
 * @param {!Array<!proto.idep.random.Request>} value
 * @return {!proto.idep.random.Requests} returns this
 */
proto.idep.random.Requests.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.idep.random.Request=} opt_value
 * @param {number=} opt_index
 * @return {!proto.idep.random.Request}
 */
proto.idep.random.Requests.prototype.addRequests = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.idep.random.Request,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.idep.random.Requests} returns this
 */
proto.idep.random.Requests.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};

goog.object.extend(exports, proto.idep.random);
